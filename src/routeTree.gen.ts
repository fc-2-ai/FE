/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SideBarLayoutImport } from './routes/_sideBarLayout'
import { Route as AuthLoginIndexImport } from './routes/auth/login/index'
import { Route as SideBarLayoutVedioArchiveIndexImport } from './routes/_sideBarLayout/vedio-archive/index'
import { Route as SideBarLayoutMyProjectIndexImport } from './routes/_sideBarLayout/my-project/index'
import { Route as SideBarLayoutDashboardIndexImport } from './routes/_sideBarLayout/dashboard/index'
import { Route as AuthSignUpFinishIndexImport } from './routes/auth/signUp/finish/index'
import { Route as SideBarLayoutDashboardComponentsCardImport } from './routes/_sideBarLayout/dashboard/_components/card'

// Create/Update Routes

const SideBarLayoutRoute = SideBarLayoutImport.update({
  id: '/_sideBarLayout',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  id: '/auth/login/',
  path: '/auth/login/',
  getParentRoute: () => rootRoute,
} as any)

const SideBarLayoutVedioArchiveIndexRoute =
  SideBarLayoutVedioArchiveIndexImport.update({
    id: '/vedio-archive/',
    path: '/vedio-archive/',
    getParentRoute: () => SideBarLayoutRoute,
  } as any)

const SideBarLayoutMyProjectIndexRoute =
  SideBarLayoutMyProjectIndexImport.update({
    id: '/my-project/',
    path: '/my-project/',
    getParentRoute: () => SideBarLayoutRoute,
  } as any)

const SideBarLayoutDashboardIndexRoute =
  SideBarLayoutDashboardIndexImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => SideBarLayoutRoute,
  } as any)

const AuthSignUpFinishIndexRoute = AuthSignUpFinishIndexImport.update({
  id: '/auth/signUp/finish/',
  path: '/auth/signUp/finish/',
  getParentRoute: () => rootRoute,
} as any)

const SideBarLayoutDashboardComponentsCardRoute =
  SideBarLayoutDashboardComponentsCardImport.update({
    id: '/dashboard/_components/card',
    path: '/dashboard/card',
    getParentRoute: () => SideBarLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_sideBarLayout': {
      id: '/_sideBarLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof SideBarLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_sideBarLayout/dashboard/': {
      id: '/_sideBarLayout/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof SideBarLayoutDashboardIndexImport
      parentRoute: typeof SideBarLayoutImport
    }
    '/_sideBarLayout/my-project/': {
      id: '/_sideBarLayout/my-project/'
      path: '/my-project'
      fullPath: '/my-project'
      preLoaderRoute: typeof SideBarLayoutMyProjectIndexImport
      parentRoute: typeof SideBarLayoutImport
    }
    '/_sideBarLayout/vedio-archive/': {
      id: '/_sideBarLayout/vedio-archive/'
      path: '/vedio-archive'
      fullPath: '/vedio-archive'
      preLoaderRoute: typeof SideBarLayoutVedioArchiveIndexImport
      parentRoute: typeof SideBarLayoutImport
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/_sideBarLayout/dashboard/_components/card': {
      id: '/_sideBarLayout/dashboard/_components/card'
      path: '/dashboard/card'
      fullPath: '/dashboard/card'
      preLoaderRoute: typeof SideBarLayoutDashboardComponentsCardImport
      parentRoute: typeof SideBarLayoutImport
    }
    '/auth/signUp/finish/': {
      id: '/auth/signUp/finish/'
      path: '/auth/signUp/finish'
      fullPath: '/auth/signUp/finish'
      preLoaderRoute: typeof AuthSignUpFinishIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface SideBarLayoutRouteChildren {
  SideBarLayoutDashboardIndexRoute: typeof SideBarLayoutDashboardIndexRoute
  SideBarLayoutMyProjectIndexRoute: typeof SideBarLayoutMyProjectIndexRoute
  SideBarLayoutVedioArchiveIndexRoute: typeof SideBarLayoutVedioArchiveIndexRoute
  SideBarLayoutDashboardComponentsCardRoute: typeof SideBarLayoutDashboardComponentsCardRoute
}

const SideBarLayoutRouteChildren: SideBarLayoutRouteChildren = {
  SideBarLayoutDashboardIndexRoute: SideBarLayoutDashboardIndexRoute,
  SideBarLayoutMyProjectIndexRoute: SideBarLayoutMyProjectIndexRoute,
  SideBarLayoutVedioArchiveIndexRoute: SideBarLayoutVedioArchiveIndexRoute,
  SideBarLayoutDashboardComponentsCardRoute:
    SideBarLayoutDashboardComponentsCardRoute,
}

const SideBarLayoutRouteWithChildren = SideBarLayoutRoute._addFileChildren(
  SideBarLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof SideBarLayoutRouteWithChildren
  '/dashboard': typeof SideBarLayoutDashboardIndexRoute
  '/my-project': typeof SideBarLayoutMyProjectIndexRoute
  '/vedio-archive': typeof SideBarLayoutVedioArchiveIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/dashboard/card': typeof SideBarLayoutDashboardComponentsCardRoute
  '/auth/signUp/finish': typeof AuthSignUpFinishIndexRoute
}

export interface FileRoutesByTo {
  '': typeof SideBarLayoutRouteWithChildren
  '/dashboard': typeof SideBarLayoutDashboardIndexRoute
  '/my-project': typeof SideBarLayoutMyProjectIndexRoute
  '/vedio-archive': typeof SideBarLayoutVedioArchiveIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/dashboard/card': typeof SideBarLayoutDashboardComponentsCardRoute
  '/auth/signUp/finish': typeof AuthSignUpFinishIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_sideBarLayout': typeof SideBarLayoutRouteWithChildren
  '/_sideBarLayout/dashboard/': typeof SideBarLayoutDashboardIndexRoute
  '/_sideBarLayout/my-project/': typeof SideBarLayoutMyProjectIndexRoute
  '/_sideBarLayout/vedio-archive/': typeof SideBarLayoutVedioArchiveIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/_sideBarLayout/dashboard/_components/card': typeof SideBarLayoutDashboardComponentsCardRoute
  '/auth/signUp/finish/': typeof AuthSignUpFinishIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/dashboard'
    | '/my-project'
    | '/vedio-archive'
    | '/auth/login'
    | '/dashboard/card'
    | '/auth/signUp/finish'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/dashboard'
    | '/my-project'
    | '/vedio-archive'
    | '/auth/login'
    | '/dashboard/card'
    | '/auth/signUp/finish'
  id:
    | '__root__'
    | '/_sideBarLayout'
    | '/_sideBarLayout/dashboard/'
    | '/_sideBarLayout/my-project/'
    | '/_sideBarLayout/vedio-archive/'
    | '/auth/login/'
    | '/_sideBarLayout/dashboard/_components/card'
    | '/auth/signUp/finish/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  SideBarLayoutRoute: typeof SideBarLayoutRouteWithChildren
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthSignUpFinishIndexRoute: typeof AuthSignUpFinishIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  SideBarLayoutRoute: SideBarLayoutRouteWithChildren,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthSignUpFinishIndexRoute: AuthSignUpFinishIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_sideBarLayout",
        "/auth/login/",
        "/auth/signUp/finish/"
      ]
    },
    "/_sideBarLayout": {
      "filePath": "_sideBarLayout.tsx",
      "children": [
        "/_sideBarLayout/dashboard/",
        "/_sideBarLayout/my-project/",
        "/_sideBarLayout/vedio-archive/",
        "/_sideBarLayout/dashboard/_components/card"
      ]
    },
    "/_sideBarLayout/dashboard/": {
      "filePath": "_sideBarLayout/dashboard/index.tsx",
      "parent": "/_sideBarLayout"
    },
    "/_sideBarLayout/my-project/": {
      "filePath": "_sideBarLayout/my-project/index.tsx",
      "parent": "/_sideBarLayout"
    },
    "/_sideBarLayout/vedio-archive/": {
      "filePath": "_sideBarLayout/vedio-archive/index.tsx",
      "parent": "/_sideBarLayout"
    },
    "/auth/login/": {
      "filePath": "auth/login/index.tsx"
    },
    "/_sideBarLayout/dashboard/_components/card": {
      "filePath": "_sideBarLayout/dashboard/_components/card.tsx",
      "parent": "/_sideBarLayout"
    },
    "/auth/signUp/finish/": {
      "filePath": "auth/signUp/finish/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
